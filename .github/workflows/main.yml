name: Deploy Kittygram

on:
  push:
    branches: 
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install backend dependencies
      working-directory: ./backend
      run: |
        pip install -r requirements.txt
    - name: Run flake8
      working-directory: ./backend
      run: |
        pip install flake8
        flake8 .
    - name: Run tests
      working-directory: ./backend
      run: |
        pip install pytest
        pytest

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
    - name: Build and push backend
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_backend:latest
        
    - name: Build and push frontend
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_frontend:latest
        
    - name: Build and push gateway
      uses: docker/build-push-action@v4
      with:
        context: ./nginx
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_gateway:latest
        
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          cd ~/kittygram
          docker compose down
          docker image pull ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_backend:latest
          docker image pull ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_frontend:latest
          docker image pull ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_gateway:latest
          docker compose up -d
          docker compose exec backend python manage.py migrate
          docker compose exec backend python manage.py collectstatic --no-input
          
    - name: Send Telegram notification
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: "Kittygram успешно обновлен на сервере!"